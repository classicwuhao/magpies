// Generated from D.g by ANTLR 4.4
package lang.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__15=1, T__14=2, T__13=3, T__12=4, T__11=5, T__10=6, T__9=7, T__8=8, 
		T__7=9, T__6=10, T__5=11, T__4=12, T__3=13, T__2=14, T__1=15, T__0=16, 
		WS=17, SL_COMMENT=18, ML_COMMENT=19, ARROW=20, AT=21, BAR=22, COLON=23, 
		COLON_COLON=24, COLON_EQUAL=25, COMMA=26, DOT=27, DOTDOT=28, EQUAL=29, 
		GREATER=30, GREATER_EQUAL=31, HASH=32, LBRACE=33, LBRACK=34, LESS=35, 
		LESS_EQUAL=36, LPAREN=37, MINUS=38, NOT_EQUAL=39, PLUS=40, RBRACE=41, 
		RBRACK=42, RPAREN=43, SEMI=44, SLASH=45, STAR=46, QUESTION=47, RARROW=48, 
		INT=49, STRING=50, IDENT=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'"
	};
	public static final String[] ruleNames = {
		"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "WS", 
		"SL_COMMENT", "ML_COMMENT", "NEWLINE", "ARROW", "AT", "BAR", "COLON", 
		"COLON_COLON", "COLON_EQUAL", "COMMA", "DOT", "DOTDOT", "EQUAL", "GREATER", 
		"GREATER_EQUAL", "HASH", "LBRACE", "LBRACK", "LESS", "LESS_EQUAL", "LPAREN", 
		"MINUS", "NOT_EQUAL", "PLUS", "RBRACE", "RBRACK", "RPAREN", "SEMI", "SLASH", 
		"STAR", "QUESTION", "RARROW", "INT", "REAL", "STRING", "ESC", "HEX_DIGIT", 
		"IDENT", "VOCAB"
	};


	public DLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "D.g"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u016d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\2\3\2\3\2\3"+
		"\2\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\5\22\u00c5\n\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\5\23\u00cd\n\23\3\23\7\23\u00d0\n\23\f\23\16"+
		"\23\u00d3\13\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\7\24\u00dd\n\24"+
		"\f\24\16\24\u00e0\13\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\5\25\u00ea"+
		"\n\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3"+
		"!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3+\3"+
		"+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63\6\63"+
		"\u012f\n\63\r\63\16\63\u0130\3\64\3\64\3\64\3\64\3\64\5\64\u0138\n\64"+
		"\3\64\5\64\u013b\n\64\3\64\3\64\5\64\u013f\n\64\3\64\5\64\u0142\n\64\3"+
		"\65\3\65\3\65\7\65\u0147\n\65\f\65\16\65\u014a\13\65\3\65\3\65\3\66\3"+
		"\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\5\66\u0159\n\66\5\66"+
		"\u015b\n\66\3\66\3\66\5\66\u015f\n\66\5\66\u0161\n\66\3\67\3\67\38\38"+
		"\78\u0167\n8\f8\168\u016a\138\39\39\3\u00de\2:\3\3\5\4\7\5\t\6\13\7\r"+
		"\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\2+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37? A!C\"E#G$I%K&M\'"+
		"O(Q)S*U+W,Y-[.]/_\60a\61c\62e\63g\2i\64k\2m\2o\65q\2\3\2\13\5\2\13\13"+
		"\16\16\"\"\4\2\f\f\17\17\4\2GGgg\4\2--//\4\2$$^^\n\2$$))^^ddhhppttvv\5"+
		"\2\62;CHch\6\2&&C\\aac|\6\2\62;C\\aac|\u017a\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2i\3\2\2"+
		"\2\2o\3\2\2\2\3s\3\2\2\2\5y\3\2\2\2\7|\3\2\2\2\t\177\3\2\2\2\13\u0083"+
		"\3\2\2\2\r\u0088\3\2\2\2\17\u008e\3\2\2\2\21\u0093\3\2\2\2\23\u0098\3"+
		"\2\2\2\25\u009d\3\2\2\2\27\u00a2\3\2\2\2\31\u00a5\3\2\2\2\33\u00ad\3\2"+
		"\2\2\35\u00b4\3\2\2\2\37\u00b8\3\2\2\2!\u00bd\3\2\2\2#\u00c4\3\2\2\2%"+
		"\u00cc\3\2\2\2\'\u00d8\3\2\2\2)\u00e9\3\2\2\2+\u00eb\3\2\2\2-\u00ee\3"+
		"\2\2\2/\u00f0\3\2\2\2\61\u00f2\3\2\2\2\63\u00f4\3\2\2\2\65\u00f7\3\2\2"+
		"\2\67\u00fa\3\2\2\29\u00fc\3\2\2\2;\u00fe\3\2\2\2=\u0101\3\2\2\2?\u0103"+
		"\3\2\2\2A\u0105\3\2\2\2C\u0108\3\2\2\2E\u010a\3\2\2\2G\u010c\3\2\2\2I"+
		"\u010e\3\2\2\2K\u0110\3\2\2\2M\u0113\3\2\2\2O\u0115\3\2\2\2Q\u0117\3\2"+
		"\2\2S\u011a\3\2\2\2U\u011c\3\2\2\2W\u011e\3\2\2\2Y\u0120\3\2\2\2[\u0122"+
		"\3\2\2\2]\u0124\3\2\2\2_\u0126\3\2\2\2a\u0128\3\2\2\2c\u012a\3\2\2\2e"+
		"\u012e\3\2\2\2g\u0132\3\2\2\2i\u0143\3\2\2\2k\u014d\3\2\2\2m\u0162\3\2"+
		"\2\2o\u0164\3\2\2\2q\u016b\3\2\2\2st\7h\2\2tu\7k\2\2uv\7z\2\2vw\7g\2\2"+
		"wx\7f\2\2x\4\3\2\2\2yz\7k\2\2z{\7p\2\2{\6\3\2\2\2|}\7q\2\2}~\7h\2\2~\b"+
		"\3\2\2\2\177\u0080\7h\2\2\u0080\u0081\7q\2\2\u0081\u0082\7t\2\2\u0082"+
		"\n\3\2\2\2\u0083\u0084\7U\2\2\u0084\u0085\7r\2\2\u0085\u0086\7g\2\2\u0086"+
		"\u0087\7e\2\2\u0087\f\3\2\2\2\u0088\u0089\7r\2\2\u0089\u008a\7t\2\2\u008a"+
		"\u008b\7k\2\2\u008b\u008c\7p\2\2\u008c\u008d\7v\2\2\u008d\16\3\2\2\2\u008e"+
		"\u008f\7p\2\2\u008f\u0090\7q\2\2\u0090\u0091\7p\2\2\u0091\u0092\7g\2\2"+
		"\u0092\20\3\2\2\2\u0093\u0094\7R\2\2\u0094\u0095\7n\2\2\u0095\u0096\7"+
		"c\2\2\u0096\u0097\7p\2\2\u0097\22\3\2\2\2\u0098\u0099\7h\2\2\u0099\u009a"+
		"\7k\2\2\u009a\u009b\7p\2\2\u009b\u009c\7f\2\2\u009c\24\3\2\2\2\u009d\u009e"+
		"\7y\2\2\u009e\u009f\7k\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7j\2\2\u00a1"+
		"\26\3\2\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7u\2\2\u00a4\30\3\2\2\2\u00a5"+
		"\u00a6\7t\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7c\2\2"+
		"\u00a9\u00aa\7z\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7f\2\2\u00ac\32\3\2"+
		"\2\2\u00ad\u00ae\7U\2\2\u00ae\u00af\7v\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1"+
		"\7w\2\2\u00b1\u00b2\7e\2\2\u00b2\u00b3\7v\2\2\u00b3\34\3\2\2\2\u00b4\u00b5"+
		"\7c\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7f\2\2\u00b7\36\3\2\2\2\u00b8\u00b9"+
		"\7|\2\2\u00b9\u00ba\7g\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7q\2\2\u00bc"+
		" \3\2\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7n\2\2\u00c0"+
		"\u00c1\7g\2\2\u00c1\"\3\2\2\2\u00c2\u00c5\t\2\2\2\u00c3\u00c5\5)\25\2"+
		"\u00c4\u00c2\3\2\2\2\u00c4\u00c3\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00c7"+
		"\b\22\2\2\u00c7$\3\2\2\2\u00c8\u00c9\7\61\2\2\u00c9\u00cd\7\61\2\2\u00ca"+
		"\u00cb\7/\2\2\u00cb\u00cd\7/\2\2\u00cc\u00c8\3\2\2\2\u00cc\u00ca\3\2\2"+
		"\2\u00cd\u00d1\3\2\2\2\u00ce\u00d0\n\3\2\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3"+
		"\3\2\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d4\3\2\2\2\u00d3"+
		"\u00d1\3\2\2\2\u00d4\u00d5\5)\25\2\u00d5\u00d6\3\2\2\2\u00d6\u00d7\b\23"+
		"\2\2\u00d7&\3\2\2\2\u00d8\u00d9\7\61\2\2\u00d9\u00da\7,\2\2\u00da\u00de"+
		"\3\2\2\2\u00db\u00dd\13\2\2\2\u00dc\u00db\3\2\2\2\u00dd\u00e0\3\2\2\2"+
		"\u00de\u00df\3\2\2\2\u00de\u00dc\3\2\2\2\u00df\u00e1\3\2\2\2\u00e0\u00de"+
		"\3\2\2\2\u00e1\u00e2\7,\2\2\u00e2\u00e3\7\61\2\2\u00e3\u00e4\3\2\2\2\u00e4"+
		"\u00e5\b\24\2\2\u00e5(\3\2\2\2\u00e6\u00e7\7\17\2\2\u00e7\u00ea\7\f\2"+
		"\2\u00e8\u00ea\t\3\2\2\u00e9\u00e6\3\2\2\2\u00e9\u00e8\3\2\2\2\u00ea*"+
		"\3\2\2\2\u00eb\u00ec\7/\2\2\u00ec\u00ed\7@\2\2\u00ed,\3\2\2\2\u00ee\u00ef"+
		"\7B\2\2\u00ef.\3\2\2\2\u00f0\u00f1\7~\2\2\u00f1\60\3\2\2\2\u00f2\u00f3"+
		"\7<\2\2\u00f3\62\3\2\2\2\u00f4\u00f5\7<\2\2\u00f5\u00f6\7<\2\2\u00f6\64"+
		"\3\2\2\2\u00f7\u00f8\7<\2\2\u00f8\u00f9\7?\2\2\u00f9\66\3\2\2\2\u00fa"+
		"\u00fb\7.\2\2\u00fb8\3\2\2\2\u00fc\u00fd\7\60\2\2\u00fd:\3\2\2\2\u00fe"+
		"\u00ff\7\60\2\2\u00ff\u0100\7\60\2\2\u0100<\3\2\2\2\u0101\u0102\7?\2\2"+
		"\u0102>\3\2\2\2\u0103\u0104\7@\2\2\u0104@\3\2\2\2\u0105\u0106\7@\2\2\u0106"+
		"\u0107\7?\2\2\u0107B\3\2\2\2\u0108\u0109\7%\2\2\u0109D\3\2\2\2\u010a\u010b"+
		"\7}\2\2\u010bF\3\2\2\2\u010c\u010d\7]\2\2\u010dH\3\2\2\2\u010e\u010f\7"+
		">\2\2\u010fJ\3\2\2\2\u0110\u0111\7>\2\2\u0111\u0112\7?\2\2\u0112L\3\2"+
		"\2\2\u0113\u0114\7*\2\2\u0114N\3\2\2\2\u0115\u0116\7/\2\2\u0116P\3\2\2"+
		"\2\u0117\u0118\7>\2\2\u0118\u0119\7@\2\2\u0119R\3\2\2\2\u011a\u011b\7"+
		"-\2\2\u011bT\3\2\2\2\u011c\u011d\7\177\2\2\u011dV\3\2\2\2\u011e\u011f"+
		"\7_\2\2\u011fX\3\2\2\2\u0120\u0121\7+\2\2\u0121Z\3\2\2\2\u0122\u0123\7"+
		"=\2\2\u0123\\\3\2\2\2\u0124\u0125\7\61\2\2\u0125^\3\2\2\2\u0126\u0127"+
		"\7,\2\2\u0127`\3\2\2\2\u0128\u0129\7A\2\2\u0129b\3\2\2\2\u012a\u012b\7"+
		"?\2\2\u012b\u012c\7@\2\2\u012cd\3\2\2\2\u012d\u012f\4\62;\2\u012e\u012d"+
		"\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131"+
		"f\3\2\2\2\u0132\u0141\5e\63\2\u0133\u0134\7\60\2\2\u0134\u013a\5e\63\2"+
		"\u0135\u0137\t\4\2\2\u0136\u0138\t\5\2\2\u0137\u0136\3\2\2\2\u0137\u0138"+
		"\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u013b\5e\63\2\u013a\u0135\3\2\2\2\u013a"+
		"\u013b\3\2\2\2\u013b\u0142\3\2\2\2\u013c\u013e\t\4\2\2\u013d\u013f\t\5"+
		"\2\2\u013e\u013d\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0140\3\2\2\2\u0140"+
		"\u0142\5e\63\2\u0141\u0133\3\2\2\2\u0141\u013c\3\2\2\2\u0142h\3\2\2\2"+
		"\u0143\u0148\7$\2\2\u0144\u0147\n\6\2\2\u0145\u0147\5k\66\2\u0146\u0144"+
		"\3\2\2\2\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0146\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u014b\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u014c\7$"+
		"\2\2\u014cj\3\2\2\2\u014d\u0160\7^\2\2\u014e\u0161\t\7\2\2\u014f\u0150"+
		"\7w\2\2\u0150\u0151\5m\67\2\u0151\u0152\5m\67\2\u0152\u0153\5m\67\2\u0153"+
		"\u0154\5m\67\2\u0154\u0161\3\2\2\2\u0155\u015a\4\62\65\2\u0156\u0158\4"+
		"\629\2\u0157\u0159\4\629\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2\2\2\u0159"+
		"\u015b\3\2\2\2\u015a\u0156\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u0161\3\2"+
		"\2\2\u015c\u015e\4\669\2\u015d\u015f\4\629\2\u015e\u015d\3\2\2\2\u015e"+
		"\u015f\3\2\2\2\u015f\u0161\3\2\2\2\u0160\u014e\3\2\2\2\u0160\u014f\3\2"+
		"\2\2\u0160\u0155\3\2\2\2\u0160\u015c\3\2\2\2\u0161l\3\2\2\2\u0162\u0163"+
		"\t\b\2\2\u0163n\3\2\2\2\u0164\u0168\t\t\2\2\u0165\u0167\t\n\2\2\u0166"+
		"\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2"+
		"\2\2\u0169p\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016c\4\5\u0379\2\u016c"+
		"r\3\2\2\2\24\2\u00c4\u00cc\u00d1\u00de\u00e9\u0130\u0137\u013a\u013e\u0141"+
		"\u0146\u0148\u0158\u015a\u015e\u0160\u0168\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}